{"version":3,"sources":["config.js","views/services/requestManager.js","views/services/studentService.js","views/Students/index.js"],"names":["domain","METHOD","GET","POST","PUT","DELETE","limit","instance","ManagerRequest","method","url","body","params","access_token","localStorage","getItem","axios","defaults","headers","common","data","response","StudentService","requestManager","getInstance","startRequest","config","username","getBadge","status","fields","key","label","_style","width","sorter","filter","Students","useState","studentsData","setStudentsData","loadingGet","loadingBan","loading","setLoading","details","setDetails","modal","setModal","setUsername","statusUser","setStatusUser","fetchData","useCallback","a","studentService","getListStudent","students","map","item","idx","stt","name","info","email","phone_number","address","active","register_at","moment","local","format","showNotification","message","useEffect","banUser","banStudent","openModalBan","toast","success","position","POSITION","BOTTOM_RIGHT","autoClose","error","xs","lg","className","style","height","color","items","itemsPerPage","tableFilter","columnFilter","hover","pagination","scopedSlots","index","variant","shape","size","onClick","indexOf","newDetails","slice","splice","toggleDetails","includes","show","to","disabled","onClose","closeButton"],"mappings":"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","file":"static/js/13.d3a547d5.chunk.js","sourcesContent":["export default {\n    // http://localhost:8080\n    // https://damp-river-04072.herokuapp.com\n    domain: \"https://damp-river-04072.herokuapp.com\",\n    METHOD: {\n        GET: 'get',\n        POST: 'post',\n        PUT: 'put',\n        DELETE: 'delete'\n    },\n    limit: 10\n}","import axios from \"axios\";\n\nlet instance = null;\n\nexport default class ManagerRequest {\n    static getInstance() {\n        if (instance == null) {\n            instance = new ManagerRequest();\n        }\n        return instance;\n    }\n\n    async startRequest(method, url, body, params = '') {\n        try {\n            const access_token = localStorage.getItem(\"access_token\") || '';\n            axios.defaults.headers.common['Content-Type'] = \"application/json\";\n            const response = await axios({\n                method: method,\n                url: url,\n                data: body,\n                params,\n                headers: {\n                    'authorization': `Bearer ${access_token}`\n                }\n            })\n            return response.data;\n        } catch (e) {\n            throw e;\n        }\n    }\n}","import config from \"../../config\";\nimport requestManager from \"./requestManager\";\n\nexport default class StudentService {\n\n  static async getListStudent(params) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.GET,\n      `${config.domain}/api/students/all`,\n      {},\n      params\n    )\n    return response;\n  }\n\n  static async getStudentByUsername(username) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.GET,\n      `${config.domain}/api/students/get/${username}`,\n      {}\n    )\n    return response;\n  }\n\n  static async createStudent(data) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.POST,\n      `${config.domain}/api/students/create`,\n      data\n    )\n    return response;\n  }\n\n  static async updateStudent(username, data) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.PUT,\n      `${config.domain}/api/students/update/${username}`,\n      data\n    )\n    return response;\n  }\n\n  static async banStudent(username) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.DELETE,\n      `${config.domain}/api/students/${username}`,\n      {}\n    )\n    return response;\n  }\n\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport moment from 'moment-timezone';\nimport { Link } from \"react-router-dom\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody, CCardFooter,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CSpinner,\n  CModal, CModalHeader, CModalBody, CModalFooter, CModalTitle,\n  CButton,\n  CCollapse\n} from '@coreui/react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport studentService from \"../services/studentService\";\nimport config from \"../../config\";\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'success'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\nconst fields = [{ key: \"stt\", label: \"STT\", _style: { width: '1%' } }, { key: \"name\", label: \"Họ và tên\" }, { key: \"username\", label: \"Tên đăng nhập\" }, { key: \"email\", label: \"Email\" }, { key: \"phone_number\", label: \"Số điện thoại\" }, { key: \"address\", label: \"Địa chỉ\" }, { key: \"status\", label: \"Trạng thái\" }, {\n  key: 'show_details',\n  label: '',\n  _style: { width: '1%' },\n  sorter: false,\n  filter: false\n}]\n\nconst Students = () => {\n  const [studentsData, setStudentsData] = useState([]);\n  const [loading, setLoading] = useState({ loadingGet: false, loadingBan: false });\n  const [details, setDetails] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [statusUser, setStatusUser] = useState(false);\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n  const fetchData = useCallback(async () => {\n    setLoading({ loadingBan: false, loadingGet: true });\n    try {\n      const response = await studentService.getListStudent();\n      if (response && response.data) {\n        const studentsData = response.data.students.map((item, idx) => ({ stt: idx + 1, name: item.info.name, username: item.username, email: item.email, phone_number: item.info.phone_number, address: item.info.address, status: (item.active ? \"Active\" : \"Banned\"), register_at: moment(item.register_at).local().format('DD/MM/YYYY HH:mm') }));\n        setStudentsData(studentsData);\n      }\n      setLoading({ loadingBan: false, loadingGet: false });\n    } catch (error) {\n      showNotification(error.response.data.message);\n    }\n  }, [])\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const banUser = async () => {\n    setLoading({ loadingBan: true, loadingGet: false });\n    try {\n      await studentService.banStudent(username);\n      showNotification(\"Thành công\", true);\n      setLoading({ loadingBan: false, loadingGet: false });\n      setModal(false);\n      fetchData();\n    } catch (error) {\n      showNotification(error.response.data.message, false);\n    }\n  }\n\n  const openModalBan = async (status, username, statusUser) => {\n    setModal(status);\n    setUsername(username);\n    setStatusUser(statusUser);\n  }\n\n  const showNotification = (message, status) => {\n    if (status) {\n      toast.success(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    } else {\n      toast.error(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    }\n  }\n\n  return (\n    <CRow>\n      <CCol xs=\"12\" lg=\"12\">\n        <CCard>\n          <CCardHeader>\n            <strong>Danh sách học sinh</strong>\n          </CCardHeader>\n          <CCardBody className=\"text-center\">\n            {\n              loading.loadingGet ? <CSpinner\n                style={{ width: \"4rem\", height: \"4rem\" }}\n                color=\"info\"\n              /> : <CDataTable\n                  items={studentsData}\n                  fields={fields}\n                  itemsPerPage={config.limit}\n                  tableFilter\n                  columnFilter\n                  hover\n                  pagination\n                  scopedSlots={{\n                    'status':\n                      (item) => (\n                        <td>\n                          <CBadge color={getBadge(item.status)}>\n                            {item.status}\n                          </CBadge>\n                        </td>\n                      ),\n                    'show_details':\n                      (item, index) => {\n                        return (\n                          <td className=\"py-2\">\n                            <CButton\n                              color=\"primary\"\n                              variant=\"outline\"\n                              shape=\"square\"\n                              size=\"sm\"\n                              onClick={() => { toggleDetails(index) }}\n                            >\n                              {details.includes(index) ? 'Hide' : 'Show'}\n                            </CButton>\n                          </td>\n                        )\n                      },\n                    'details':\n                      (item, index) => {\n                        return (\n                          <CCollapse show={details.includes(index)}>\n                            <CCardBody>\n                              <h4>\n                                {item.name}\n                              </h4>\n                              <p className=\"text-muted\">Updated at: {item.register_at}</p>\n                              <Link to={`/students/update/${item.username}`}>\n                                <CButton size=\"sm\" color=\"info\">Cập nhật</CButton>\n                              </Link>\n                              {item.status === \"Active\" ? <CButton disabled={loading.loadingBan} onClick={() => openModalBan(true, item.username, true)} size=\"sm\" color=\"danger\" className=\"ml-1\">\n                                {loading.loadingBan ? \"...Loading\" : \"Cấm hoạt động\"}\n                              </CButton> : <CButton disabled={loading.loadingBan} onClick={() => openModalBan(true, item.username, false)} size=\"sm\" color=\"success\" className=\"ml-1\">\n                                  {loading.loadingBan ? \"...Loading\" : \"Cho phép hoạt động\"}\n                                </CButton>}\n                            </CCardBody>\n                          </CCollapse>\n                        )\n                      }\n                  }}\n                />\n            }\n          </CCardBody>\n          <CCardFooter>\n            <Link to=\"/students/add\">\n              <CButton color=\"primary\" className=\"float-right\">Thêm học sinh</CButton>\n            </Link>\n          </CCardFooter>\n        </CCard>\n      </CCol>\n      <CModal\n        show={modal}\n        onClose={setModal}\n      >\n        <CModalHeader closeButton>\n          <CModalTitle>{statusUser ? \"Cấm hoạt động\" : \"Cho phép hoạt động\"}</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          {statusUser ? \"Bạn chắc chắn muốn cấm hoạt động với học sinh này ?\" : \"Bạn chắc chắn muốn cho phép học sinh này hoạt động ?\"}\n        </CModalBody>\n        <CModalFooter>\n          <CButton disabled={loading.loadingBan} color=\"primary\" onClick={() => banUser()}>{loading.loadingBan ? \"...Loading\" : \"Đồng ý\"}</CButton>{' '}\n          <CButton\n            color=\"secondary\"\n            onClick={() => setModal(false)}\n          >Huỷ</CButton>\n        </CModalFooter>\n      </CModal>\n    </CRow>\n  )\n}\n\nexport default Students\n"],"sourceRoot":""}