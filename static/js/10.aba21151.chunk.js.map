{"version":3,"sources":["config.js","views/services/requestManager.js","views/services/userService.js","views/Managers/addManager.js"],"names":["domain","METHOD","GET","POST","PUT","DELETE","limit","instance","ManagerRequest","method","url","body","params","access_token","localStorage","getItem","axios","defaults","headers","common","data","response","ManagerService","requestManager","getInstance","startRequest","config","username","AddManager","history","useHistory","useState","inputValues","setInputValues","loading","setLoading","handleOnChange","event","target","name","value","login","a","password","email","address","phone_number","showNotification","userService","createManager","push","message","status","toast","success","position","POSITION","BOTTOM_RIGHT","autoClose","error","xs","lg","action","className","row","md","htmlFor","style","color","type","id","onChange","placeholder","autoComplete","disabled","onClick"],"mappings":"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","file":"static/js/10.aba21151.chunk.js","sourcesContent":["export default {\n    // http://localhost:8080\n    // https://damp-river-04072.herokuapp.com\n    domain: \"https://damp-river-04072.herokuapp.com\",\n    METHOD: {\n        GET: 'get',\n        POST: 'post',\n        PUT: 'put',\n        DELETE: 'delete'\n    },\n    limit: 10\n}","import axios from \"axios\";\n\nlet instance = null;\n\nexport default class ManagerRequest {\n    static getInstance() {\n        if (instance == null) {\n            instance = new ManagerRequest();\n        }\n        return instance;\n    }\n\n    async startRequest(method, url, body, params = '') {\n        try {\n            const access_token = localStorage.getItem(\"access_token\") || '';\n            axios.defaults.headers.common['Content-Type'] = \"application/json\";\n            const response = await axios({\n                method: method,\n                url: url,\n                data: body,\n                params,\n                headers: {\n                    'authorization': `Bearer ${access_token}`\n                }\n            })\n            return response.data;\n        } catch (e) {\n            throw e;\n        }\n    }\n}","import config from \"../../config\";\nimport requestManager from \"./requestManager\";\n\nexport default class ManagerService {\n\tstatic async login(data) {\n\t\tconst response = await requestManager.getInstance().startRequest(config.METHOD.POST,\n\t\t\t`${config.domain}/api/users/login`,\n\t\t\tdata\n\t\t)\n\t\treturn response;\n\t}\n\n\tstatic async getListManager(params) {\n\t\tconst response = await requestManager.getInstance().startRequest(config.METHOD.GET,\n\t\t\t`${config.domain}/api/users/all`,\n\t\t\t{},\n\t\t\tparams\n\t\t)\n\t\treturn response;\n\t}\n\n\tstatic async createManager(data) {\n\t\tconst response = await requestManager.getInstance().startRequest(config.METHOD.POST,\n\t\t\t`${config.domain}/api/users/create`,\n\t\t\tdata\n\t\t)\n\t\treturn response;\n\t}\n\n\tstatic async banManager(username) {\n\t\tconst response = await requestManager.getInstance().startRequest(config.METHOD.DELETE,\n\t\t\t`${config.domain}/api/users/${username}`,\n\t\t\t{}\n\t\t)\n\t\treturn response;\n\t}\n}","import React, { useState } from 'react';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CCardFooter,\n  CButton\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport userService from \"../services/userService\";\n\nconst AddManager = () => {\n\n  const history = useHistory()\n  const [inputValues, setInputValues] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n    setInputValues({ ...inputValues, [name]: value });\n  };\n\n  const login = async () => {\n    const { username, password, email, address, name, phone_number } = inputValues;\n    if (!username || !password || !email || !address || !name || !phone_number) {\n      showNotification(\"Vui lòng điền đẩy đủ thông tin.\", false);\n      return;\n    }\n    setLoading(true);\n    try {\n      await userService.createManager(inputValues);\n      showNotification(\"Tạo thành công\", true);\n      history.push(\"/managers\");\n    } catch (error) {\n      setLoading(false);\n      showNotification(error.response.data.message, false);\n    }\n  }\n\n  const showNotification = (message, status) => {\n    if (status) {\n      toast.success(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    } else {\n      toast.error(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    }\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              <strong>Thêm quản lý</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"email\">Email <span style={{ color: \"red\" }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput type=\"email\" id=\"email\" name=\"email\" onChange={handleOnChange} placeholder=\"Enter Email...\" autoComplete=\"email\" />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"hf-password\">Password <span style={{ color: \"red\" }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput type=\"password\" id=\"password\" name=\"password\" onChange={handleOnChange} placeholder=\"Enter Password...\" autoComplete=\"current-password\" />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"username\">Tên đăng nhập <span style={{ color: \"red\" }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput id=\"username\" name=\"username\" onChange={handleOnChange} />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"name\">Họ và tên <span style={{ color: \"red\" }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput id=\"name\" name=\"name\" onChange={handleOnChange} />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"address\">Địa chỉ <span style={{ color: \"red\" }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput id=\"address\" name=\"address\" onChange={handleOnChange} />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"phone_number\">Số điện thoại <span style={{ color: \"red\" }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput type=\"number\" id=\"phone_number\" name=\"phone_number\" onChange={handleOnChange} />\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              {\n                loading ? <CButton className=\"float-right\" color=\"primary\" disabled={loading}>...Loading</CButton> : <CButton className=\"float-right\" type=\"submit\" color=\"primary\" onClick={login}><CIcon name=\"cil-scrubber\" /> Thêm quản lý</CButton>\n              }\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default AddManager\n"],"sourceRoot":""}