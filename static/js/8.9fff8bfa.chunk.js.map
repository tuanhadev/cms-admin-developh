{"version":3,"sources":["config.js","views/services/requestManager.js","views/services/classRoomService.js","views/ClassRooms/addClassRoom.js"],"names":["domain","METHOD","GET","POST","PUT","DELETE","limit","instance","ManagerRequest","method","url","body","params","access_token","localStorage","getItem","axios","defaults","headers","common","data","response","ClassRoomService","requestManager","getInstance","startRequest","config","id","AddClassRoom","history","useHistory","useState","inputValues","setInputValues","loading","setLoading","createClassRoom","a","name","showNotification","classRoomService","push","message","status","toast","success","position","POSITION","BOTTOM_RIGHT","autoClose","error","xs","lg","action","className","row","md","htmlFor","style","color","type","onChange","event","target","value","placeholder","disabled","onClick"],"mappings":"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","file":"static/js/8.9fff8bfa.chunk.js","sourcesContent":["export default {\n    // http://localhost:8080\n    // https://damp-river-04072.herokuapp.com\n    domain: \"https://damp-river-04072.herokuapp.com\",\n    METHOD: {\n        GET: 'get',\n        POST: 'post',\n        PUT: 'put',\n        DELETE: 'delete'\n    },\n    limit: 10\n}","import axios from \"axios\";\n\nlet instance = null;\n\nexport default class ManagerRequest {\n    static getInstance() {\n        if (instance == null) {\n            instance = new ManagerRequest();\n        }\n        return instance;\n    }\n\n    async startRequest(method, url, body, params = '') {\n        try {\n            const access_token = localStorage.getItem(\"access_token\") || '';\n            axios.defaults.headers.common['Content-Type'] = \"application/json\";\n            const response = await axios({\n                method: method,\n                url: url,\n                data: body,\n                params,\n                headers: {\n                    'authorization': `Bearer ${access_token}`\n                }\n            })\n            return response.data;\n        } catch (e) {\n            throw e;\n        }\n    }\n}","import config from \"../../config\";\nimport requestManager from \"./requestManager\";\n\nexport default class ClassRoomService {\n\n  static async getListClassRoom(params) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.GET,\n      `${config.domain}/api/classrooms/all`,\n      {},\n      params\n    )\n    return response;\n  }\n\n  static async getClassRoomById(id) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.GET,\n      `${config.domain}/api/classrooms/get/${id}`,\n      {}\n    )\n    return response;\n  }\n\n  static async createClassRoom(data) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.POST,\n      `${config.domain}/api/classrooms/create`,\n      data\n    )\n    return response;\n  }\n\n  static async updateClassRoom(id, data) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.PUT,\n      `${config.domain}/api/classrooms/update/${id}`,\n      data\n    )\n    return response;\n  }\n\n  static async deleteClassRoom(id) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.DELETE,\n      `${config.domain}/api/classrooms/${id}`,\n      {}\n    )\n    return response;\n  }\n\n}","import React, { useState } from 'react';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CCardFooter,\n  CButton\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport classRoomService from \"../services/classRoomService\";\n\nconst AddClassRoom = () => {\n\n  const history = useHistory()\n  const [inputValues, setInputValues] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n    setInputValues({ ...inputValues, [name]: value });\n  };\n\n  const createClassRoom = async () => {\n    const { name } = inputValues;\n    if (!name) {\n      showNotification(\"Vui lòng điền đẩy đủ thông tin.\", false);\n      return;\n    }\n    setLoading(true);\n    try {\n      await classRoomService.createClassRoom(inputValues);\n      showNotification(\"Tạo thành công\", true);\n      history.push(\"/classrooms/room\");\n    } catch (error) {\n      setLoading(false);\n      showNotification(error.response.data.message, false);\n    }\n  }\n\n  const showNotification = (message, status) => {\n    if (status) {\n      toast.success(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    } else {\n      toast.error(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    }\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              <strong>Thêm lớp học</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"name\">Tên lớp học<span style={{ color: \"red\" }}>*</span></CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    <CInput type=\"text\" id=\"name\" name=\"name\" onChange={handleOnChange} placeholder=\"Nhập tên lớp học...\" />\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              {\n                loading ? <CButton className=\"float-right\" color=\"primary\" disabled={loading}>...Loading</CButton> : <CButton className=\"float-right\" type=\"submit\" color=\"primary\" onClick={createClassRoom}><CIcon name=\"cil-scrubber\" /> Thêm lớp học</CButton>\n              }\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default AddClassRoom\n"],"sourceRoot":""}