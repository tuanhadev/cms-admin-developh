{"version":3,"sources":["config.js","views/services/requestManager.js","views/services/studentService.js","views/Students/updateStudent.js"],"names":["domain","METHOD","GET","POST","PUT","DELETE","limit","instance","ManagerRequest","method","url","body","params","access_token","localStorage","getItem","axios","defaults","headers","common","data","response","StudentService","requestManager","getInstance","startRequest","config","username","UpdateStudent","history","useHistory","useParams","useState","inputValues","setInputValues","loadingGet","loadingUpdate","loading","setLoading","useEffect","a","studentService","getStudentByUsername","email","info","name","facebook","school","address","phone_number","showNotification","message","fetchData","handleOnChange","event","target","value","updateTeacher","updateStudent","push","status","toast","success","position","POSITION","BOTTOM_RIGHT","autoClose","error","xs","lg","className","style","width","height","color","action","row","md","htmlFor","type","id","disabled","onChange","placeholder","autoComplete","onClick"],"mappings":"iIAAe,KAGXA,OAAQ,yCACRC,OAAQ,CACJC,IAAK,MACLC,KAAM,OACNC,IAAK,MACLC,OAAQ,UAEZC,MAAO,K,sICRPC,EAAW,KAEMC,E,8IAQEC,EAAQC,EAAKC,G,8FAAMC,E,+BAAS,G,SAEjCC,EAAeC,aAAaC,QAAQ,iBAAmB,GAC7DC,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mB,SACzBH,IAAM,CACzBP,OAAQA,EACRC,IAAKA,EACLU,KAAMT,EACNC,SACAM,QAAS,CACL,cAAgB,UAAhB,OAA2BL,M,cAN7BQ,E,yBASCA,EAASD,M,wMAhBpB,OAHgB,MAAZb,IACAA,EAAW,IAAIC,GAEZD,M,4ICNMe,E,qJAESV,G,uFACHW,IAAeC,cAAcC,aAAaC,IAAOzB,OAAOC,IAAxD,UAClBwB,IAAO1B,OADW,qBAErB,GACAY,G,cAHIS,E,yBAKCA,G,sLAGyBM,G,uFACTJ,IAAeC,cAAcC,aAAaC,IAAOzB,OAAOC,IAAxD,UAClBwB,IAAO1B,OADW,6BACgB2B,GACrC,I,cAFIN,E,yBAICA,G,+KAGkBD,G,uFACFG,IAAeC,cAAcC,aAAaC,IAAOzB,OAAOE,KAAxD,UAClBuB,IAAO1B,OADW,wBAErBoB,G,cAFIC,E,yBAICA,G,+KAGkBM,EAAUP,G,uFACZG,IAAeC,cAAcC,aAAaC,IAAOzB,OAAOG,IAAxD,UAClBsB,IAAO1B,OADW,gCACmB2B,GACxCP,G,cAFIC,E,yBAICA,G,8KAGeM,G,uFACCJ,IAAeC,cAAcC,aAAaC,IAAOzB,OAAOI,OAAxD,UAClBqB,IAAO1B,OADW,yBACY2B,GACjC,I,cAFIN,E,yBAICA,G,iRC4HIO,UAlJO,WACpB,IAAMC,EAAUC,cACRH,EAAaI,cAAbJ,SAFkB,EAGYK,mBAAS,IAHrB,mBAGnBC,EAHmB,KAGNC,EAHM,OAIIF,mBAAS,CAAEG,YAAY,EAAOC,eAAe,IAJjD,mBAInBC,EAJmB,KAIVC,EAJU,KAM1BC,qBAAU,YACO,uCAAG,8CAAAC,EAAA,6DAChBF,EAAW,CAAEF,eAAe,EAAOD,YAAY,IAD/B,kBAGSM,IAAeC,qBAAqBf,GAH7C,QAGRN,EAHQ,SAIEA,EAASD,OAAO,EACFC,EAASD,KAA7BO,EADqB,EACrBA,SAAUgB,EADW,EACXA,MADW,EAE6BtB,EAASD,KAAKwB,KAAhEC,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,SAAUC,EAFK,EAELA,OAAQC,EAFH,EAEGA,QAASC,EAFZ,EAEYA,aACzCf,EAAe,CAAEP,WAAUgB,QAAOE,OAAMC,WAAUC,SAAQC,UAASC,kBAErEX,EAAW,CAAEF,eAAe,EAAOD,YAAY,IATjC,gDAWde,EAAiB,KAAM7B,SAASD,KAAK+B,SAXvB,yDAAH,qDAcfC,KACC,CAACzB,IAEJ,IAAM0B,EAAiB,SAAAC,GAAU,IAAD,EACNA,EAAMC,OAAtBV,EADsB,EACtBA,KAAMW,EADgB,EAChBA,MACdtB,EAAe,2BAAKD,GAAN,kBAAoBY,EAAOW,MAGrCC,EAAa,uCAAG,oCAAAjB,EAAA,yDACZb,EAAiDM,EAAjDN,SAAUgB,EAAuCV,EAAvCU,MAAOK,EAAgCf,EAAhCe,QAASH,EAAuBZ,EAAvBY,KAAMI,EAAiBhB,EAAjBgB,aACnCtB,GAAagB,GAAUK,GAAYH,GAASI,EAF7B,uBAGlBC,EAAiB,uEAAmC,GAHlC,iCAMpBZ,EAAW,CAAEF,eAAe,EAAMD,YAAY,IAN1B,kBAQZM,IAAeiB,cAAc/B,EAAUM,GAR3B,OASlBiB,EAAiB,oBAAc,GAC/BrB,EAAQ8B,KAAK,aAVK,kDAYlBrB,EAAW,CAAEF,eAAe,EAAOD,YAAY,IAC/Ce,EAAiB,KAAM7B,SAASD,KAAK+B,SAAS,GAb5B,0DAAH,qDAiBbD,EAAmB,SAACC,EAASS,GAC7BA,EACFC,IAAMC,QAAQX,EAAS,CACrBY,SAAUF,IAAMG,SAASC,aACzBC,UAAW,MAGbL,IAAMM,MAAMhB,EAAS,CACnBY,SAAUF,IAAMG,SAASC,aACzBC,UAAW,OAKjB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAME,GAAG,KAAKC,GAAG,MACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,oEAEF,kBAAC,IAAD,CAAWC,UAAU,eAEjBjC,EAAQF,WAAa,kBAAC,IAAD,CACnBoC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,MAAM,SAEN,kBAAC,IAAD,CAAOC,OAAO,GAAGlE,OAAO,OAAO6D,UAAU,6BACvC,kBAAC,IAAD,CAAYM,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAQC,QAAQ,SAAhB,SAA8B,0BAAMP,MAAO,CAAEG,MAAO,QAAtB,OAEhC,kBAAC,IAAD,CAAMN,GAAG,KAAKS,GAAG,KACf,kBAAC,IAAD,CAAQE,KAAK,QAAQC,GAAG,QAAQnC,KAAK,QAAQoC,UAAU,EAAMzB,MAAOvB,EAAYU,OAAS,GAAIuC,SAAU7B,EAAgB8B,YAAY,iBAAiBC,aAAa,YAGrK,kBAAC,IAAD,CAAYR,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAQC,QAAQ,YAAhB,mCAAyC,0BAAMP,MAAO,CAAEG,MAAO,QAAtB,OAE3C,kBAAC,IAAD,CAAMN,GAAG,KAAKS,GAAG,KACf,kBAAC,IAAD,CAAQG,GAAG,WAAWnC,KAAK,WAAWoC,UAAU,EAAMzB,MAAOvB,EAAYN,UAAY,GAAIuD,SAAU7B,MAGvG,kBAAC,IAAD,CAAYuB,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAQC,QAAQ,QAAhB,wBAAiC,0BAAMP,MAAO,CAAEG,MAAO,QAAtB,OAEnC,kBAAC,IAAD,CAAMN,GAAG,KAAKS,GAAG,KACf,kBAAC,IAAD,CAAQG,GAAG,OAAOnC,KAAK,OAAOqC,SAAU7B,EAAgBG,MAAOvB,EAAYY,MAAQ,OAGvF,kBAAC,IAAD,CAAY+B,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAQC,QAAQ,WAAhB,0BAAkC,0BAAMP,MAAO,CAAEG,MAAO,QAAtB,OAEpC,kBAAC,IAAD,CAAMN,GAAG,KAAKS,GAAG,KACf,kBAAC,IAAD,CAAQG,GAAG,UAAUnC,KAAK,UAAUqC,SAAU7B,EAAgBG,MAAOvB,EAAYe,SAAW,OAGhG,kBAAC,IAAD,CAAY4B,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAQC,QAAQ,gBAAhB,qCAA6C,0BAAMP,MAAO,CAAEG,MAAO,QAAtB,OAE/C,kBAAC,IAAD,CAAMN,GAAG,KAAKS,GAAG,KACf,kBAAC,IAAD,CAAQE,KAAK,SAASC,GAAG,eAAenC,KAAK,eAAeW,MAAOvB,EAAYgB,cAAgB,GAAIiC,SAAU7B,MAGjH,kBAAC,IAAD,CAAYuB,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAQC,QAAQ,YAAhB,cAEF,kBAAC,IAAD,CAAMV,GAAG,KAAKS,GAAG,KACf,kBAAC,IAAD,CAAQE,KAAK,OAAOC,GAAG,WAAWnC,KAAK,WAAWW,MAAOvB,EAAYa,UAAY,GAAIoC,SAAU7B,MAGnG,kBAAC,IAAD,CAAYuB,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAQC,QAAQ,UAAhB,8BAEF,kBAAC,IAAD,CAAMV,GAAG,KAAKS,GAAG,KACf,kBAAC,IAAD,CAAQE,KAAK,OAAOC,GAAG,SAASnC,KAAK,SAASW,MAAOvB,EAAYc,QAAU,GAAImC,SAAU7B,QAMrG,kBAAC,IAAD,KAEIhB,EAAQD,cAAgB,kBAAC,IAAD,CAASkC,UAAU,cAAcI,MAAM,UAAUO,SAAU5C,EAAQD,eAAnE,cAAyG,kBAAC,IAAD,CAASkC,UAAU,cAAcS,KAAK,SAASL,MAAM,UAAUW,QAAS5B,GAAe,kBAAC,IAAD,CAAOZ,KAAK,iBAAnG","file":"static/js/14.65395b05.chunk.js","sourcesContent":["export default {\n    // http://localhost:8080\n    // https://damp-river-04072.herokuapp.com\n    domain: \"https://damp-river-04072.herokuapp.com\",\n    METHOD: {\n        GET: 'get',\n        POST: 'post',\n        PUT: 'put',\n        DELETE: 'delete'\n    },\n    limit: 10\n}","import axios from \"axios\";\n\nlet instance = null;\n\nexport default class ManagerRequest {\n    static getInstance() {\n        if (instance == null) {\n            instance = new ManagerRequest();\n        }\n        return instance;\n    }\n\n    async startRequest(method, url, body, params = '') {\n        try {\n            const access_token = localStorage.getItem(\"access_token\") || '';\n            axios.defaults.headers.common['Content-Type'] = \"application/json\";\n            const response = await axios({\n                method: method,\n                url: url,\n                data: body,\n                params,\n                headers: {\n                    'authorization': `Bearer ${access_token}`\n                }\n            })\n            return response.data;\n        } catch (e) {\n            throw e;\n        }\n    }\n}","import config from \"../../config\";\nimport requestManager from \"./requestManager\";\n\nexport default class StudentService {\n\n  static async getListStudent(params) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.GET,\n      `${config.domain}/api/students/all`,\n      {},\n      params\n    )\n    return response;\n  }\n\n  static async getStudentByUsername(username) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.GET,\n      `${config.domain}/api/students/get/${username}`,\n      {}\n    )\n    return response;\n  }\n\n  static async createStudent(data) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.POST,\n      `${config.domain}/api/students/create`,\n      data\n    )\n    return response;\n  }\n\n  static async updateStudent(username, data) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.PUT,\n      `${config.domain}/api/students/update/${username}`,\n      data\n    )\n    return response;\n  }\n\n  static async banStudent(username) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.DELETE,\n      `${config.domain}/api/students/${username}`,\n      {}\n    )\n    return response;\n  }\n\n}","import React, { useState, useEffect } from 'react';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CCardFooter,\n  CButton, CSpinner\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { useHistory, useParams } from 'react-router-dom'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport studentService from \"../services/studentService\";\n\nconst UpdateStudent = () => {\n  const history = useHistory();\n  const { username } = useParams();\n  const [inputValues, setInputValues] = useState({});\n  const [loading, setLoading] = useState({ loadingGet: false, loadingUpdate: false });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading({ loadingUpdate: false, loadingGet: true });\n      try {\n        const response = await studentService.getStudentByUsername(username);\n        if (response && response.data) {\n          const { username, email } = response.data;\n          const { name, facebook, school, address, phone_number } = response.data.info;\n          setInputValues({ username, email, name, facebook, school, address, phone_number });\n        }\n        setLoading({ loadingUpdate: false, loadingGet: false });\n      } catch (error) {\n        showNotification(error.response.data.message);\n      }\n    }\n    fetchData();\n  }, [username]);\n\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n    setInputValues({ ...inputValues, [name]: value });\n  };\n\n  const updateTeacher = async () => {\n    const { username, email, address, name, phone_number } = inputValues;\n    if (!username || !email || !address || !name || !phone_number) {\n      showNotification(\"Vui lòng điền đẩy đủ thông tin.\", false);\n      return;\n    }\n    setLoading({ loadingUpdate: true, loadingGet: false });\n    try {\n      await studentService.updateStudent(username, inputValues);\n      showNotification(\"Thành công\", true);\n      history.push(\"/students\");\n    } catch (error) {\n      setLoading({ loadingUpdate: false, loadingGet: false });\n      showNotification(error.response.data.message, false);\n    }\n  }\n\n  const showNotification = (message, status) => {\n    if (status) {\n      toast.success(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    } else {\n      toast.error(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    }\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              <strong>Cập nhật thông tin</strong>\n            </CCardHeader>\n            <CCardBody className=\"text-center\">\n              {\n                loading.loadingGet ? <CSpinner\n                  style={{ width: \"4rem\", height: \"4rem\" }}\n                  color=\"info\"\n                /> :\n                  <CForm action=\"\" method=\"post\" className=\"form-horizontal text-left\">\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"email\">Email <span style={{ color: \"red\" }}>*</span></CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput type=\"email\" id=\"email\" name=\"email\" disabled={true} value={inputValues.email || ''} onChange={handleOnChange} placeholder=\"Enter Email...\" autoComplete=\"email\" />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"username\">Tên đăng nhập <span style={{ color: \"red\" }}>*</span></CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput id=\"username\" name=\"username\" disabled={true} value={inputValues.username || ''} onChange={handleOnChange} />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"name\">Họ và tên <span style={{ color: \"red\" }}>*</span></CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput id=\"name\" name=\"name\" onChange={handleOnChange} value={inputValues.name || ''} />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"address\">Địa chỉ <span style={{ color: \"red\" }}>*</span></CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput id=\"address\" name=\"address\" onChange={handleOnChange} value={inputValues.address || ''} />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"phone_number\">Số điện thoại <span style={{ color: \"red\" }}>*</span></CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput type=\"number\" id=\"phone_number\" name=\"phone_number\" value={inputValues.phone_number || ''} onChange={handleOnChange} />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"facebook\">Facebook </CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput type=\"text\" id=\"facebook\" name=\"facebook\" value={inputValues.facebook || ''} onChange={handleOnChange} />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"school\">Trường học</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput type=\"text\" id=\"school\" name=\"school\" value={inputValues.school || ''} onChange={handleOnChange} />\n                      </CCol>\n                    </CFormGroup>\n                  </CForm>\n              }\n            </CCardBody>\n            <CCardFooter>\n              {\n                loading.loadingUpdate ? <CButton className=\"float-right\" color=\"primary\" disabled={loading.loadingUpdate}>...Loading</CButton> : <CButton className=\"float-right\" type=\"submit\" color=\"primary\" onClick={updateTeacher}><CIcon name=\"cil-scrubber\" /> Cập nhật</CButton>\n              }\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default UpdateStudent\n"],"sourceRoot":""}