{"version":3,"sources":["config.js","views/services/requestManager.js","views/services/subjectService.js","views/Subjects/updateSubject.js"],"names":["domain","METHOD","GET","POST","PUT","DELETE","limit","instance","ManagerRequest","method","url","body","params","access_token","localStorage","getItem","axios","defaults","headers","common","data","response","SubjectService","requestManager","getInstance","startRequest","config","id","UpdateSubject","history","useHistory","useParams","useState","inputValues","setInputValues","loadingGet","loadingUpdate","loading","setLoading","useEffect","a","subjectService","getSubjectById","name","description","showNotification","message","fetchData","handleOnChange","event","target","value","updateSubject","push","status","toast","success","position","POSITION","BOTTOM_RIGHT","autoClose","error","xs","lg","className","style","width","height","color","action","row","md","htmlFor","type","onChange","placeholder","disabled","onClick"],"mappings":"iIAAe,KAGXA,OAAQ,yCACRC,OAAQ,CACJC,IAAK,MACLC,KAAM,OACNC,IAAK,MACLC,OAAQ,UAEZC,MAAO,K,sICRPC,EAAW,KAEMC,E,8IAQEC,EAAQC,EAAKC,G,8FAAMC,E,+BAAS,G,SAEjCC,EAAeC,aAAaC,QAAQ,iBAAmB,GAC7DC,IAAMC,SAASC,QAAQC,OAAO,gBAAkB,mB,SACzBH,IAAM,CACzBP,OAAQA,EACRC,IAAKA,EACLU,KAAMT,EACNC,SACAM,QAAS,CACL,cAAgB,UAAhB,OAA2BL,M,cAN7BQ,E,yBASCA,EAASD,M,wMAhBpB,OAHgB,MAAZb,IACAA,EAAW,IAAIC,GAEZD,M,4ICNMe,E,qJAESV,G,uFACHW,IAAeC,cAAcC,aAAaC,IAAOzB,OAAOC,IAAxD,UAClBwB,IAAO1B,OADW,qBAErB,GACAY,G,cAHIS,E,yBAKCA,G,gLAGmBM,G,uFACHJ,IAAeC,cAAcC,aAAaC,IAAOzB,OAAOC,IAAxD,UAClBwB,IAAO1B,OADW,6BACgB2B,GACrC,I,cAFIN,E,yBAICA,G,+KAGkBD,G,uFACFG,IAAeC,cAAcC,aAAaC,IAAOzB,OAAOE,KAAxD,UAClBuB,IAAO1B,OADW,wBAErBoB,G,cAFIC,E,yBAICA,G,+KAGkBM,EAAIP,G,uFACNG,IAAeC,cAAcC,aAAaC,IAAOzB,OAAOG,IAAxD,UAClBsB,IAAO1B,OADW,gCACmB2B,GACxCP,G,cAFIC,E,yBAICA,G,iLAGkBM,G,uFACFJ,IAAeC,cAAcC,aAAaC,IAAOzB,OAAOI,OAAxD,UAClBqB,IAAO1B,OADW,yBACY2B,GACjC,I,cAFIN,E,yBAICA,G,iRCmFIO,UAzGO,WACpB,IAAMC,EAAUC,cACRH,EAAOI,cAAPJ,GAFkB,EAGYK,mBAAS,IAHrB,mBAGnBC,EAHmB,KAGNC,EAHM,OAIIF,mBAAS,CAAEG,YAAY,EAAOC,eAAe,IAJjD,mBAInBC,EAJmB,KAIVC,EAJU,KAM1BC,qBAAU,YACO,uCAAG,kCAAAC,EAAA,6DAChBF,EAAW,CAAEF,eAAe,EAAOD,YAAY,IAD/B,kBAGSM,IAAeC,eAAef,GAHvC,QAGRN,EAHQ,SAIEA,EAASD,OAAO,EACAC,EAASD,KAA/BuB,EADqB,EACrBA,KAAMC,EADe,EACfA,YACdV,EAAe,CAAES,OAAMC,iBAEzBN,EAAW,CAAEF,eAAe,EAAOD,YAAY,IARjC,gDAUdU,EAAiB,KAAMxB,SAASD,KAAK0B,SAVvB,yDAAH,qDAafC,KACC,CAACpB,IAEJ,IAAMqB,EAAiB,SAAAC,GAAU,IAAD,EACNA,EAAMC,OAAtBP,EADsB,EACtBA,KAAMQ,EADgB,EAChBA,MACdjB,EAAe,2BAAKD,GAAN,kBAAoBU,EAAOQ,MAGrCC,EAAa,uCAAG,8BAAAZ,EAAA,yDACZG,EAAsBV,EAAtBU,KAAMC,EAAgBX,EAAhBW,YACTD,GAASC,EAFM,uBAGlBC,EAAiB,uEAAmC,GAHlC,iCAMpBP,EAAW,CAAEF,eAAe,EAAMD,YAAY,IAN1B,kBAQZM,IAAeW,cAAczB,EAAIM,GARrB,OASlBY,EAAiB,oBAAc,GAC/BhB,EAAQwB,KAAK,uBAVK,kDAYlBf,EAAW,CAAEF,eAAe,EAAOD,YAAY,IAC/CU,EAAiB,KAAMxB,SAASD,KAAK0B,SAAS,GAb5B,0DAAH,qDAiBbD,EAAmB,SAACC,EAASQ,GAC7BA,EACFC,IAAMC,QAAQV,EAAS,CACrBW,SAAUF,IAAMG,SAASC,aACzBC,UAAW,MAGbL,IAAMM,MAAMf,EAAS,CACnBW,SAAUF,IAAMG,SAASC,aACzBC,UAAW,OAKjB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAME,GAAG,KAAKC,GAAG,MACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,oEAEF,kBAAC,IAAD,CAAWC,UAAU,eAEjB3B,EAAQF,WAAa,kBAAC,IAAD,CACnB8B,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,MAAM,SAEN,kBAAC,IAAD,CAAOC,OAAO,GAAG5D,OAAO,OAAOuD,UAAU,6BACvC,kBAAC,IAAD,CAAYM,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAQC,QAAQ,QAAhB,0BAAmC,0BAAMP,MAAO,CAAEG,MAAO,QAAtB,OAErC,kBAAC,IAAD,CAAMN,GAAG,KAAKS,GAAG,KACf,kBAAC,IAAD,CAAQE,KAAK,OAAO9C,GAAG,OAAOgB,KAAK,OAAOQ,MAAOlB,EAAYU,MAAQ,GAAI+B,SAAU1B,EAAgB2B,YAAY,0CAGnH,kBAAC,IAAD,CAAYL,KAAG,GACb,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAAC,IAAD,CAAQC,QAAQ,eAAhB,iBAAoC,0BAAMP,MAAO,CAAEG,MAAO,QAAtB,OAEtC,kBAAC,IAAD,CAAMN,GAAG,KAAKS,GAAG,KACf,kBAAC,IAAD,CAAQ5C,GAAG,cAAcgB,KAAK,cAAcQ,MAAOlB,EAAYW,aAAe,GAAI8B,SAAU1B,QAMxG,kBAAC,IAAD,KAEIX,EAAQD,cAAgB,kBAAC,IAAD,CAAS4B,UAAU,cAAcI,MAAM,UAAUQ,SAAUvC,EAAQD,eAAnE,cAAyG,kBAAC,IAAD,CAAS4B,UAAU,cAAcS,KAAK,SAASL,MAAM,UAAUS,QAASzB,GAAe,kBAAC,IAAD,CAAOT,KAAK,iBAAnG","file":"static/js/17.a51f5a47.chunk.js","sourcesContent":["export default {\n    // http://localhost:8080\n    // https://damp-river-04072.herokuapp.com\n    domain: \"https://damp-river-04072.herokuapp.com\",\n    METHOD: {\n        GET: 'get',\n        POST: 'post',\n        PUT: 'put',\n        DELETE: 'delete'\n    },\n    limit: 10\n}","import axios from \"axios\";\n\nlet instance = null;\n\nexport default class ManagerRequest {\n    static getInstance() {\n        if (instance == null) {\n            instance = new ManagerRequest();\n        }\n        return instance;\n    }\n\n    async startRequest(method, url, body, params = '') {\n        try {\n            const access_token = localStorage.getItem(\"access_token\") || '';\n            axios.defaults.headers.common['Content-Type'] = \"application/json\";\n            const response = await axios({\n                method: method,\n                url: url,\n                data: body,\n                params,\n                headers: {\n                    'authorization': `Bearer ${access_token}`\n                }\n            })\n            return response.data;\n        } catch (e) {\n            throw e;\n        }\n    }\n}","import config from \"../../config\";\nimport requestManager from \"./requestManager\";\n\nexport default class SubjectService {\n\n  static async getListSubject(params) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.GET,\n      `${config.domain}/api/subjects/all`,\n      {},\n      params\n    )\n    return response;\n  }\n\n  static async getSubjectById(id) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.GET,\n      `${config.domain}/api/subjects/get/${id}`,\n      {}\n    )\n    return response;\n  }\n\n  static async createSubject(data) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.POST,\n      `${config.domain}/api/subjects/create`,\n      data\n    )\n    return response;\n  }\n\n  static async updateSubject(id, data) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.PUT,\n      `${config.domain}/api/subjects/update/${id}`,\n      data\n    )\n    return response;\n  }\n\n  static async deleteSubject(id) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.DELETE,\n      `${config.domain}/api/subjects/${id}`,\n      {}\n    )\n    return response;\n  }\n\n}","import React, { useState, useEffect } from 'react';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CCardFooter,\n  CButton, CSpinner\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { useHistory, useParams } from 'react-router-dom'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport subjectService from \"../services/subjectService\";\n\nconst UpdateSubject = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const [inputValues, setInputValues] = useState({});\n  const [loading, setLoading] = useState({ loadingGet: false, loadingUpdate: false });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading({ loadingUpdate: false, loadingGet: true });\n      try {\n        const response = await subjectService.getSubjectById(id);\n        if (response && response.data) {\n          const { name, description } = response.data;\n          setInputValues({ name, description });\n        }\n        setLoading({ loadingUpdate: false, loadingGet: false });\n      } catch (error) {\n        showNotification(error.response.data.message);\n      }\n    }\n    fetchData();\n  }, [id]);\n\n  const handleOnChange = event => {\n    const { name, value } = event.target;\n    setInputValues({ ...inputValues, [name]: value });\n  };\n\n  const updateSubject = async () => {\n    const { name, description } = inputValues;\n    if (!name || !description) {\n      showNotification(\"Vui lòng điền đẩy đủ thông tin.\", false);\n      return;\n    }\n    setLoading({ loadingUpdate: true, loadingGet: false });\n    try {\n      await subjectService.updateSubject(id, inputValues);\n      showNotification(\"Thành công\", true);\n      history.push(\"/classrooms/subject\");\n    } catch (error) {\n      setLoading({ loadingUpdate: false, loadingGet: false });\n      showNotification(error.response.data.message, false);\n    }\n  }\n\n  const showNotification = (message, status) => {\n    if (status) {\n      toast.success(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    } else {\n      toast.error(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    }\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              <strong>Cập nhật thông tin</strong>\n            </CCardHeader>\n            <CCardBody className=\"text-center\">\n              {\n                loading.loadingGet ? <CSpinner\n                  style={{ width: \"4rem\", height: \"4rem\" }}\n                  color=\"info\"\n                /> :\n                  <CForm action=\"\" method=\"post\" className=\"form-horizontal text-left\">\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"name\">Tên môn học <span style={{ color: \"red\" }}>*</span></CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput type=\"text\" id=\"name\" name=\"name\" value={inputValues.name || ''} onChange={handleOnChange} placeholder=\"Nhập tên môn học...\" />\n                      </CCol>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"description\">Mô tả <span style={{ color: \"red\" }}>*</span></CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <CInput id=\"description\" name=\"description\" value={inputValues.description || ''} onChange={handleOnChange} />\n                      </CCol>\n                    </CFormGroup>\n                  </CForm>\n              }\n            </CCardBody>\n            <CCardFooter>\n              {\n                loading.loadingUpdate ? <CButton className=\"float-right\" color=\"primary\" disabled={loading.loadingUpdate}>...Loading</CButton> : <CButton className=\"float-right\" type=\"submit\" color=\"primary\" onClick={updateSubject}><CIcon name=\"cil-scrubber\" /> Cập nhật</CButton>\n              }\n            </CCardFooter>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default UpdateSubject\n"],"sourceRoot":""}