{"version":3,"sources":["config.js","views/services/requestManager.js","views/services/userService.js","views/Managers/index.js"],"names":["domain","METHOD","GET","POST","PUT","DELETE","limit","instance","ManagerRequest","method","url","body","params","access_token","localStorage","getItem","axios","defaults","headers","common","data","response","ManagerService","requestManager","getInstance","startRequest","config","username","getBadge","status","fields","key","label","_style","width","sorter","filter","Managers","useState","managersData","setManagersData","loadingGet","loadingBan","loading","setLoading","details","setDetails","modal","setModal","setUsername","statusUser","setStatusUser","fetchData","useCallback","a","managerService","getListManager","listManager","users","item","role","map","idx","stt","name","info","email","phone_number","address","active","register_at","moment","local","format","showNotification","message","useEffect","banUser","banManager","openModalBan","toast","success","position","POSITION","BOTTOM_RIGHT","autoClose","error","xs","lg","className","style","height","color","items","itemsPerPage","tableFilter","columnFilter","hover","pagination","scopedSlots","index","variant","shape","size","onClick","indexOf","newDetails","slice","splice","toggleDetails","includes","show","to","disabled","onClose","closeButton"],"mappings":"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","file":"static/js/9.52e89a2e.chunk.js","sourcesContent":["export default {\n    // http://localhost:8080\n    // https://damp-river-04072.herokuapp.com\n    domain: \"https://damp-river-04072.herokuapp.com\",\n    METHOD: {\n        GET: 'get',\n        POST: 'post',\n        PUT: 'put',\n        DELETE: 'delete'\n    },\n    limit: 10\n}","import axios from \"axios\";\n\nlet instance = null;\n\nexport default class ManagerRequest {\n    static getInstance() {\n        if (instance == null) {\n            instance = new ManagerRequest();\n        }\n        return instance;\n    }\n\n    async startRequest(method, url, body, params = '') {\n        try {\n            const access_token = localStorage.getItem(\"access_token\") || '';\n            axios.defaults.headers.common['Content-Type'] = \"application/json\";\n            const response = await axios({\n                method: method,\n                url: url,\n                data: body,\n                params,\n                headers: {\n                    'authorization': `Bearer ${access_token}`\n                }\n            })\n            return response.data;\n        } catch (e) {\n            throw e;\n        }\n    }\n}","import config from \"../../config\";\nimport requestManager from \"./requestManager\";\n\nexport default class ManagerService {\n\tstatic async login(data) {\n\t\tconst response = await requestManager.getInstance().startRequest(config.METHOD.POST,\n\t\t\t`${config.domain}/api/users/login`,\n\t\t\tdata\n\t\t)\n\t\treturn response;\n\t}\n\n\tstatic async getListManager(params) {\n\t\tconst response = await requestManager.getInstance().startRequest(config.METHOD.GET,\n\t\t\t`${config.domain}/api/users/all`,\n\t\t\t{},\n\t\t\tparams\n\t\t)\n\t\treturn response;\n\t}\n\n\tstatic async createManager(data) {\n\t\tconst response = await requestManager.getInstance().startRequest(config.METHOD.POST,\n\t\t\t`${config.domain}/api/users/create`,\n\t\t\tdata\n\t\t)\n\t\treturn response;\n\t}\n\n\tstatic async banManager(username) {\n\t\tconst response = await requestManager.getInstance().startRequest(config.METHOD.DELETE,\n\t\t\t`${config.domain}/api/users/${username}`,\n\t\t\t{}\n\t\t)\n\t\treturn response;\n\t}\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport moment from 'moment-timezone';\nimport { Link } from \"react-router-dom\";\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CSpinner,\n  CButton,\n  CCollapse,\n  CCardFooter, CModal, CModalHeader, CModalBody, CModalFooter, CModalTitle\n} from '@coreui/react'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport managerService from \"../services/userService\";\nimport config from \"../../config\";\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'success'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\nconst fields = [{ key: \"stt\", label: \"STT\", _style: { width: '1%' } }, { key: \"name\", label: \"Họ và tên\" }, { key: \"username\", label: \"Tên đăng nhập\" }, { key: \"email\", label: \"Email\" }, { key: \"phone_number\", label: \"Số điện thoại\" }, { key: \"address\", label: \"Địa chỉ\" }, { key: \"status\", label: \"Trạng thái\" }, {\n  key: 'show_details',\n  label: '',\n  _style: { width: '1%' },\n  sorter: false,\n  filter: false\n}]\n\nconst Managers = () => {\n  const [managersData, setManagersData] = useState([]);\n  const [loading, setLoading] = useState({ loadingGet: false, loadingBan: false });\n  const [details, setDetails] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [statusUser, setStatusUser] = useState(false)\n\n  const fetchData = useCallback(async () => {\n    setLoading({ loadingBan: false, loadingGet: true });\n    try {\n      const response = await managerService.getListManager();\n      const listManager = response.data.users.filter(item => item.role !== \"admin\");\n      if (response && response.data) {\n        const managersData = listManager.map((item, idx) => ({ stt: idx + 1, name: item.info.name, username: item.username, email: item.email, phone_number: item.info.phone_number, address: item.info.address, status: (item.active ? \"Active\" : \"Banned\"), register_at: moment(item.register_at).local().format('DD/MM/YYYY HH:mm') }));\n        setManagersData(managersData);\n      }\n      setLoading({ loadingBan: false, loadingGet: false });\n    } catch (error) {\n      showNotification(error.response.data.message, false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const banUser = async () => {\n    setLoading({ loadingBan: true, loadingGet: false });\n    try {\n      await managerService.banManager(username);\n      showNotification(\"Thành công\", true);\n      setLoading({ loadingBan: false, loadingGet: false });\n      setModal(false);\n      fetchData();\n    } catch (error) {\n      showNotification(error.response.data.message, false);\n    }\n  }\n\n  const openModalBan = async (status, username, statusUser) => {\n    setModal(status);\n    setUsername(username);\n    setStatusUser(statusUser);\n  }\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n  const showNotification = (message, status) => {\n    if (status) {\n      toast.success(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    } else {\n      toast.error(message, {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 2000\n      })\n    }\n  }\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              <strong>Danh sách quản lý</strong>\n            </CCardHeader>\n            <CCardBody className=\"text-center\">\n              {\n                loading.loadingGet ? <CSpinner\n                  style={{ width: \"4rem\", height: \"4rem\" }}\n                  color=\"info\"\n                /> : <>\n                    <CDataTable\n                      items={managersData}\n                      fields={fields}\n                      itemsPerPage={config.limit}\n                      tableFilter\n                      columnFilter\n                      hover\n                      pagination\n                      scopedSlots={{\n                        'status':\n                          (item) => (\n                            <td>\n                              <CBadge color={getBadge(item.status)}>\n                                {item.status}\n                              </CBadge>\n                            </td>\n                          ),\n                        'show_details':\n                          (item, index) => {\n                            return (\n                              <td className=\"py-2\">\n                                <CButton\n                                  color=\"primary\"\n                                  variant=\"outline\"\n                                  shape=\"square\"\n                                  size=\"sm\"\n                                  onClick={() => { toggleDetails(index) }}\n                                >\n                                  {details.includes(index) ? 'Hide' : 'Show'}\n                                </CButton>\n                              </td>\n                            )\n                          },\n                        'details':\n                          (item, index) => {\n                            return (\n                              <CCollapse show={details.includes(index)}>\n                                <CCardBody>\n                                  <h4>\n                                    {item.name}\n                                  </h4>\n                                  <p className=\"text-muted\">Updated at: {item.register_at}</p>\n                                  <Link to={`/managers/${item.username}/update`}>\n                                    <CButton disabled={true} size=\"sm\" color=\"info\">Cập nhật</CButton>\n                                  </Link>\n                                  {item.status === \"Active\" ? <CButton disabled={loading.loadingBan} onClick={() => openModalBan(true, item.username, true)} size=\"sm\" color=\"danger\" className=\"ml-1\">\n                                    {loading.loadingBan ? \"...Loading\" : \"Cấm hoạt động\"}\n                                  </CButton> : <CButton disabled={loading.loadingBan} onClick={() => openModalBan(true, item.username, false)} size=\"sm\" color=\"success\" className=\"ml-1\">\n                                      {loading.loadingBan ? \"...Loading\" : \"Cho phép hoạt động\"}\n                                    </CButton>}\n                                </CCardBody>\n                              </CCollapse>\n                            )\n                          }\n                      }}\n                    />\n                  </>\n              }\n            </CCardBody>\n            <CCardFooter>\n              <Link to=\"/managers/add\">\n                <CButton color=\"primary\" className=\"float-right\">Thêm quản lý</CButton>\n              </Link>\n            </CCardFooter>\n          </CCard>\n        </CCol>\n        <CModal\n          show={modal}\n          onClose={setModal}\n        >\n          <CModalHeader closeButton>\n            <CModalTitle>{statusUser ? \"Cấm hoạt động\" : \"Cho phép hoạt động\"}</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            {statusUser ? \"Bạn chắc chắn muốn cấm hoạt động với quản lý này ?\" : \"Bạn chắc chắn muốn cho phép quản lý này hoạt động ?\"}\n          </CModalBody>\n          <CModalFooter>\n            <CButton disabled={loading.loadingBan} color=\"primary\" onClick={() => banUser()}>{loading.loadingBan ? \"...Loading\" : \"Đồng ý\"}</CButton>{' '}\n            <CButton\n              color=\"secondary\"\n              onClick={() => setModal(false)}\n            >Huỷ</CButton>\n          </CModalFooter>\n        </CModal>\n      </CRow>\n    </>\n  )\n}\n\nexport default Managers\n"],"sourceRoot":""}