{"version":3,"sources":["config.js","views/services/requestManager.js","views/services/teacherService.js","views/Teachers/index.js"],"names":["domain","METHOD","GET","POST","PUT","DELETE","limit","instance","ManagerRequest","method","url","body","params","access_token","localStorage","getItem","axios","defaults","headers","common","data","response","TeacherService","requestManager","getInstance","startRequest","config","getBadge","status","fields","key","label","_style","width","sorter","filter","Teachers","useState","teachersData","setTeachersData","loading","setLoading","errors","setErrors","details","setDetails","useEffect","a","teacherService","getListTeacher","teachers","map","item","idx","stt","name","info","username","email","phone_number","address","active","register_at","moment","local","format","message","fetchData","xs","lg","className","style","height","color","items","itemsPerPage","tableFilter","columnFilter","hover","pagination","scopedSlots","index","variant","shape","size","onClick","position","indexOf","newDetails","slice","splice","toggleDetails","includes","show","Boolean","autohide","fade","backgroundColor","closeButton"],"mappings":"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","file":"static/js/10.8da2bb55.chunk.js","sourcesContent":["export default {\n    // http://localhost:8080\n    domain: \"https://damp-river-04072.herokuapp.com\",\n    METHOD: {\n        GET: 'get',\n        POST: 'post',\n        PUT: 'put',\n        DELETE: 'delete'\n    },\n    limit: 10\n}","import axios from \"axios\";\n\nlet instance = null;\n\nexport default class ManagerRequest {\n    static getInstance() {\n        if (instance == null) {\n            instance = new ManagerRequest();\n        }\n        return instance;\n    }\n\n    async startRequest(method, url, body, params = '') {\n        try {\n            const access_token = localStorage.getItem(\"access_token\") || '';\n            axios.defaults.headers.common['Content-Type'] = \"application/json\";\n            const response = await axios({\n                method: method,\n                url: url,\n                data: body,\n                params,\n                headers: {\n                    'authorization': `Bearer ${access_token}`\n                }\n            })\n            return response.data;\n        } catch (e) {\n            throw e;\n        }\n    }\n}","import config from \"../../config\";\nimport requestManager from \"./requestManager\";\n\nexport default class TeacherService {\n\n  static async getListTeacher(params) {\n    const response = await requestManager.getInstance().startRequest(config.METHOD.GET,\n      `${config.domain}/api/teachers/all`,\n      {},\n      params\n    )\n    return response;\n  }\n\n}","import React, { useState, useEffect } from 'react';\nimport moment from 'moment-timezone';\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CSpinner,\n  CToast,\n  CToastHeader,\n  CToaster,\n  CToastBody,\n  CButton,\n  CCollapse\n} from '@coreui/react'\n\nimport teacherService from \"../services/teacherService\";\nimport config from \"../../config\";\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active': return 'success'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\nconst fields = [{ key: \"stt\", label: \"STT\", _style: { width: '1%' } }, { key: \"name\", label: \"Họ và tên\" }, { key: \"username\", label: \"Tên đăng nhập\" }, { key: \"email\", label: \"Email\" }, { key: \"phone_number\", label: \"Số điện thoại\" }, { key: \"address\", label: \"Địa chỉ\" }, { key: \"status\", label: \"Trạng thái\" }, {\n  key: 'show_details',\n  label: '',\n  _style: { width: '1%' },\n  sorter: false,\n  filter: false\n}]\n\nconst Teachers = () => {\n  const [teachersData, setTeachersData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState(null);\n\n  const [details, setDetails] = useState([])\n\n  const toggleDetails = (index) => {\n    const position = details.indexOf(index)\n    let newDetails = details.slice()\n    if (position !== -1) {\n      newDetails.splice(position, 1)\n    } else {\n      newDetails = [...details, index]\n    }\n    setDetails(newDetails)\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await teacherService.getListTeacher();\n        if (response && response.data) {\n          const teachersData = response.data.teachers.map((item, idx) => ({ stt: idx + 1, name: item.info.name, username: item.username, email: item.email, phone_number: item.info.phone_number, address: item.info.address, status: (item.active ? \"Active\" : \"Banned\"), register_at: moment(item.register_at).local().format('DD/MM/YYYY HH:mm') }));\n          setTeachersData(teachersData);\n        }\n        setLoading(false);\n      } catch (error) {\n        setErrors(error.response.data.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" lg=\"12\">\n          <CCard>\n            <CCardHeader>\n              <strong>Danh sách giáo viên</strong>\n            </CCardHeader>\n            <CCardBody className=\"text-center\">\n              {\n                loading ? <CSpinner\n                  style={{ width: \"4rem\", height: \"4rem\" }}\n                  color=\"info\"\n                /> : <CDataTable\n                    items={teachersData}\n                    fields={fields}\n                    itemsPerPage={config.limit}\n                    tableFilter\n                    columnFilter\n                    hover\n                    pagination\n                    scopedSlots={{\n                      'status':\n                        (item) => (\n                          <td>\n                            <CBadge color={getBadge(item.status)}>\n                              {item.status}\n                            </CBadge>\n                          </td>\n                        ),\n                      'show_details':\n                        (item, index) => {\n                          return (\n                            <td className=\"py-2\">\n                              <CButton\n                                color=\"primary\"\n                                variant=\"outline\"\n                                shape=\"square\"\n                                size=\"sm\"\n                                onClick={() => { toggleDetails(index) }}\n                              >\n                                {details.includes(index) ? 'Hide' : 'Show'}\n                              </CButton>\n                            </td>\n                          )\n                        },\n                      'details':\n                        (item, index) => {\n                          return (\n                            <CCollapse show={details.includes(index)}>\n                              <CCardBody>\n                                <h4>\n                                  {item.name}\n                                </h4>\n                                <p className=\"text-muted\">Updated at: {item.register_at}</p>\n                                <CButton size=\"sm\" color=\"info\">\n                                  Update\n                                </CButton>\n                                <CButton size=\"sm\" color=\"danger\" className=\"ml-1\">\n                                  Ban\n                                </CButton>\n                              </CCardBody>\n                            </CCollapse>\n                          )\n                        }\n\n                    }}\n                  />\n              }\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CToaster\n        position={\"bottom-right\"}\n      >\n        <CToast\n          show={Boolean(errors)}\n          autohide={3000}\n          fade={true}\n          style={{ backgroundColor: \"#e55353\" }}\n        >\n          <CToastHeader closeButton>\n            Thông báo\n          </CToastHeader>\n          <CToastBody>\n            {errors}\n          </CToastBody>\n        </CToast>\n      </CToaster>\n    </>\n  )\n}\n\nexport default Teachers\n"],"sourceRoot":""}